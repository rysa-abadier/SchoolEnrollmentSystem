/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package edu.abadier.enrolmentsystem;

import static edu.abadier.enrolmentsystem.Accounts.admins;
import static edu.abadier.enrolmentsystem.Accounts.registrars;
import static edu.abadier.enrolmentsystem.Accounts.students;
import static edu.abadier.enrolmentsystem.Accounts.teachers;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Date;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author ron.g.abadier
 */
public class AdminWindowUserList extends javax.swing.JFrame {

    /**
     * Creates new form AdminWindowUserList
     */
    public AdminWindowUserList() {
        initComponents();
        SetTableView();
        AddColumnListener();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelMenu = new javax.swing.JPanel();
        textUser = new javax.swing.JLabel();
        panelUsersList = new javax.swing.JPanel();
        headerUsersList = new javax.swing.JLabel();
        panelRegisterUser = new javax.swing.JPanel();
        headerRegisterUser = new javax.swing.JLabel();
        buttonLogout = new javax.swing.JButton();
        panelProfile = new javax.swing.JPanel();
        headerProfile = new javax.swing.JLabel();
        panelSubjects = new javax.swing.JPanel();
        headerSubjects = new javax.swing.JLabel();
        tabPaneUsersList = new javax.swing.JTabbedPane();
        panelAdmins = new javax.swing.JPanel();
        headerAdminsTitle = new javax.swing.JLabel();
        fieldAdminsSearch = new javax.swing.JTextField();
        buttonAdminsSearch = new javax.swing.JButton();
        scrollAdminsUserList = new javax.swing.JScrollPane();
        tableAdminList = new javax.swing.JTable();
        buttonAdminsNewUser = new javax.swing.JButton();
        panelStudents = new javax.swing.JPanel();
        headerStudentsTitle = new javax.swing.JLabel();
        fieldStudentsSearch = new javax.swing.JTextField();
        buttonStudentsSearch = new javax.swing.JButton();
        scrollStudentsUserList = new javax.swing.JScrollPane();
        tableStudentList = new javax.swing.JTable();
        buttonStudentsNewUser = new javax.swing.JButton();
        panelTeachers = new javax.swing.JPanel();
        headerTeachersTitle = new javax.swing.JLabel();
        fieldTeachersSearch = new javax.swing.JTextField();
        buttonTeachersSearch = new javax.swing.JButton();
        scrollTeachersUserList = new javax.swing.JScrollPane();
        tableTeacherList = new javax.swing.JTable();
        buttonTeachersNewUser = new javax.swing.JButton();
        panelRegistrars = new javax.swing.JPanel();
        headerRegistrarsTitle = new javax.swing.JLabel();
        fieldRegistrarsSearch = new javax.swing.JTextField();
        buttonRegistrarsSearch = new javax.swing.JButton();
        scrollRegistrarsUserList = new javax.swing.JScrollPane();
        tableRegistrarList = new javax.swing.JTable();
        buttonRegistrarsNewUser = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("User List");
        setLocation(new java.awt.Point(300, 150));
        setMinimumSize(new java.awt.Dimension(600, 400));
        setResizable(false);

        panelMenu.setBackground(new java.awt.Color(204, 204, 204));

        textUser.setFont(new java.awt.Font("Yu Gothic", 0, 14)); // NOI18N
        textUser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        textUser.setText("ADMINISTRATOR");
        textUser.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        panelUsersList.setBackground(new java.awt.Color(224, 224, 224));
        panelUsersList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelUsersListMouseClicked(evt);
            }
        });

        headerUsersList.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        headerUsersList.setText("Users List");

        javax.swing.GroupLayout panelUsersListLayout = new javax.swing.GroupLayout(panelUsersList);
        panelUsersList.setLayout(panelUsersListLayout);
        panelUsersListLayout.setHorizontalGroup(
            panelUsersListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelUsersListLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(headerUsersList)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelUsersListLayout.setVerticalGroup(
            panelUsersListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelUsersListLayout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(headerUsersList)
                .addContainerGap())
        );

        panelRegisterUser.setBackground(new java.awt.Color(224, 224, 224));
        panelRegisterUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelRegisterUserMouseClicked(evt);
            }
        });

        headerRegisterUser.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        headerRegisterUser.setText(" Register User");

        javax.swing.GroupLayout panelRegisterUserLayout = new javax.swing.GroupLayout(panelRegisterUser);
        panelRegisterUser.setLayout(panelRegisterUserLayout);
        panelRegisterUserLayout.setHorizontalGroup(
            panelRegisterUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRegisterUserLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(headerRegisterUser)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelRegisterUserLayout.setVerticalGroup(
            panelRegisterUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRegisterUserLayout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(headerRegisterUser)
                .addContainerGap())
        );

        buttonLogout.setFont(new java.awt.Font("DialogInput", 1, 12)); // NOI18N
        buttonLogout.setText("Logout");
        buttonLogout.setBorder(null);
        buttonLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLogoutActionPerformed(evt);
            }
        });

        panelProfile.setBackground(new java.awt.Color(224, 224, 224));
        panelProfile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelProfileMouseClicked(evt);
            }
        });

        headerProfile.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        headerProfile.setText("Profile");

        javax.swing.GroupLayout panelProfileLayout = new javax.swing.GroupLayout(panelProfile);
        panelProfile.setLayout(panelProfileLayout);
        panelProfileLayout.setHorizontalGroup(
            panelProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelProfileLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(headerProfile)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelProfileLayout.setVerticalGroup(
            panelProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelProfileLayout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(headerProfile)
                .addContainerGap())
        );

        panelSubjects.setBackground(new java.awt.Color(224, 224, 224));
        panelSubjects.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelSubjectsMouseClicked(evt);
            }
        });

        headerSubjects.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        headerSubjects.setText("Subjects");

        javax.swing.GroupLayout panelSubjectsLayout = new javax.swing.GroupLayout(panelSubjects);
        panelSubjects.setLayout(panelSubjectsLayout);
        panelSubjectsLayout.setHorizontalGroup(
            panelSubjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSubjectsLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(headerSubjects)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelSubjectsLayout.setVerticalGroup(
            panelSubjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSubjectsLayout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(headerSubjects)
                .addContainerGap())
        );

        javax.swing.GroupLayout panelMenuLayout = new javax.swing.GroupLayout(panelMenu);
        panelMenu.setLayout(panelMenuLayout);
        panelMenuLayout.setHorizontalGroup(
            panelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(panelUsersList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelRegisterUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panelMenuLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(buttonLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
            .addComponent(panelProfile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelSubjects, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panelMenuLayout.setVerticalGroup(
            panelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMenuLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(textUser)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelUsersList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelRegisterUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelSubjects, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panelProfile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(buttonLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        tabPaneUsersList.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tabPaneUsersListFocusGained(evt);
            }
        });
        tabPaneUsersList.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tabPaneUsersListPropertyChange(evt);
            }
        });

        panelAdmins.setBackground(new java.awt.Color(255, 255, 255));

        headerAdminsTitle.setFont(new java.awt.Font("DialogInput", 0, 18)); // NOI18N
        headerAdminsTitle.setText("ADMINISTRATORS LIST");

        fieldAdminsSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldAdminsSearchActionPerformed(evt);
            }
        });

        buttonAdminsSearch.setFont(new java.awt.Font("DialogInput", 0, 12)); // NOI18N
        buttonAdminsSearch.setText("Search");
        buttonAdminsSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAdminsSearchActionPerformed(evt);
            }
        });

        tableAdminList.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        tableAdminList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID #", "Last Name", "First Name", "Middle Name", "Birthdate", "Gender", "Job Title"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableAdminList.getTableHeader().setReorderingAllowed(false);
        scrollAdminsUserList.setViewportView(tableAdminList);
        if (tableAdminList.getColumnModel().getColumnCount() > 0) {
            tableAdminList.getColumnModel().getColumn(0).setResizable(false);
            tableAdminList.getColumnModel().getColumn(0).setPreferredWidth(50);
            tableAdminList.getColumnModel().getColumn(1).setResizable(false);
            tableAdminList.getColumnModel().getColumn(2).setResizable(false);
            tableAdminList.getColumnModel().getColumn(3).setResizable(false);
            tableAdminList.getColumnModel().getColumn(4).setResizable(false);
            tableAdminList.getColumnModel().getColumn(5).setResizable(false);
            tableAdminList.getColumnModel().getColumn(5).setPreferredWidth(50);
            tableAdminList.getColumnModel().getColumn(6).setResizable(false);
        }

        buttonAdminsNewUser.setFont(new java.awt.Font("DialogInput", 0, 12)); // NOI18N
        buttonAdminsNewUser.setText("New User");
        buttonAdminsNewUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAdminsNewUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelAdminsLayout = new javax.swing.GroupLayout(panelAdmins);
        panelAdmins.setLayout(panelAdminsLayout);
        panelAdminsLayout.setHorizontalGroup(
            panelAdminsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAdminsLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(panelAdminsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAdminsLayout.createSequentialGroup()
                        .addGroup(panelAdminsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(scrollAdminsUserList)
                            .addGroup(panelAdminsLayout.createSequentialGroup()
                                .addComponent(fieldAdminsSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(buttonAdminsSearch)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelAdminsLayout.createSequentialGroup()
                        .addComponent(headerAdminsTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 161, Short.MAX_VALUE)
                        .addComponent(buttonAdminsNewUser)
                        .addGap(27, 27, 27))))
        );
        panelAdminsLayout.setVerticalGroup(
            panelAdminsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAdminsLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(panelAdminsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(headerAdminsTitle)
                    .addComponent(buttonAdminsNewUser))
                .addGap(18, 18, 18)
                .addGroup(panelAdminsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonAdminsSearch)
                    .addComponent(fieldAdminsSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scrollAdminsUserList, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        tabPaneUsersList.addTab("Admins", panelAdmins);

        panelStudents.setBackground(new java.awt.Color(255, 255, 255));

        headerStudentsTitle.setFont(new java.awt.Font("DialogInput", 0, 18)); // NOI18N
        headerStudentsTitle.setText("STUDENTS LIST");

        fieldStudentsSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldStudentsSearchActionPerformed(evt);
            }
        });

        buttonStudentsSearch.setFont(new java.awt.Font("DialogInput", 0, 12)); // NOI18N
        buttonStudentsSearch.setText("Search");
        buttonStudentsSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonStudentsSearchActionPerformed(evt);
            }
        });

        tableStudentList.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        tableStudentList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID #", "Last Name", "First Name", "Middle Name", "Birthdate", "Gender", "Year Level", "Section"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableStudentList.getTableHeader().setReorderingAllowed(false);
        scrollStudentsUserList.setViewportView(tableStudentList);
        if (tableStudentList.getColumnModel().getColumnCount() > 0) {
            tableStudentList.getColumnModel().getColumn(0).setResizable(false);
            tableStudentList.getColumnModel().getColumn(0).setPreferredWidth(50);
            tableStudentList.getColumnModel().getColumn(1).setResizable(false);
            tableStudentList.getColumnModel().getColumn(2).setResizable(false);
            tableStudentList.getColumnModel().getColumn(3).setResizable(false);
            tableStudentList.getColumnModel().getColumn(4).setResizable(false);
            tableStudentList.getColumnModel().getColumn(5).setResizable(false);
            tableStudentList.getColumnModel().getColumn(5).setPreferredWidth(50);
            tableStudentList.getColumnModel().getColumn(6).setResizable(false);
            tableStudentList.getColumnModel().getColumn(7).setResizable(false);
        }

        buttonStudentsNewUser.setFont(new java.awt.Font("DialogInput", 0, 12)); // NOI18N
        buttonStudentsNewUser.setText("New User");
        buttonStudentsNewUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonStudentsNewUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelStudentsLayout = new javax.swing.GroupLayout(panelStudents);
        panelStudents.setLayout(panelStudentsLayout);
        panelStudentsLayout.setHorizontalGroup(
            panelStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelStudentsLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(panelStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelStudentsLayout.createSequentialGroup()
                        .addGroup(panelStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(scrollStudentsUserList)
                            .addGroup(panelStudentsLayout.createSequentialGroup()
                                .addComponent(fieldStudentsSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(buttonStudentsSearch)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelStudentsLayout.createSequentialGroup()
                        .addComponent(headerStudentsTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 225, Short.MAX_VALUE)
                        .addComponent(buttonStudentsNewUser)
                        .addGap(27, 27, 27))))
        );
        panelStudentsLayout.setVerticalGroup(
            panelStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelStudentsLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(panelStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(headerStudentsTitle)
                    .addComponent(buttonStudentsNewUser))
                .addGap(18, 18, 18)
                .addGroup(panelStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonStudentsSearch)
                    .addComponent(fieldStudentsSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scrollStudentsUserList, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        tabPaneUsersList.addTab("Students", panelStudents);

        panelTeachers.setBackground(new java.awt.Color(255, 255, 255));

        headerTeachersTitle.setFont(new java.awt.Font("DialogInput", 0, 18)); // NOI18N
        headerTeachersTitle.setText("TEACHERS LIST");

        fieldTeachersSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldTeachersSearchActionPerformed(evt);
            }
        });

        buttonTeachersSearch.setFont(new java.awt.Font("DialogInput", 0, 12)); // NOI18N
        buttonTeachersSearch.setText("Search");
        buttonTeachersSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTeachersSearchActionPerformed(evt);
            }
        });

        tableTeacherList.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        tableTeacherList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID #", "Last Name", "First Name", "Middle Name", "Birthdate", "Gender", "Job Title", "Subject"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableTeacherList.getTableHeader().setReorderingAllowed(false);
        scrollTeachersUserList.setViewportView(tableTeacherList);
        if (tableTeacherList.getColumnModel().getColumnCount() > 0) {
            tableTeacherList.getColumnModel().getColumn(0).setResizable(false);
            tableTeacherList.getColumnModel().getColumn(0).setPreferredWidth(50);
            tableTeacherList.getColumnModel().getColumn(1).setResizable(false);
            tableTeacherList.getColumnModel().getColumn(2).setResizable(false);
            tableTeacherList.getColumnModel().getColumn(3).setResizable(false);
            tableTeacherList.getColumnModel().getColumn(4).setResizable(false);
            tableTeacherList.getColumnModel().getColumn(5).setResizable(false);
            tableTeacherList.getColumnModel().getColumn(5).setPreferredWidth(50);
            tableTeacherList.getColumnModel().getColumn(6).setResizable(false);
            tableTeacherList.getColumnModel().getColumn(7).setResizable(false);
        }

        buttonTeachersNewUser.setFont(new java.awt.Font("DialogInput", 0, 12)); // NOI18N
        buttonTeachersNewUser.setText("New User");
        buttonTeachersNewUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTeachersNewUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelTeachersLayout = new javax.swing.GroupLayout(panelTeachers);
        panelTeachers.setLayout(panelTeachersLayout);
        panelTeachersLayout.setHorizontalGroup(
            panelTeachersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTeachersLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(panelTeachersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelTeachersLayout.createSequentialGroup()
                        .addGroup(panelTeachersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(scrollTeachersUserList)
                            .addGroup(panelTeachersLayout.createSequentialGroup()
                                .addComponent(fieldTeachersSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(buttonTeachersSearch)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelTeachersLayout.createSequentialGroup()
                        .addComponent(headerTeachersTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 225, Short.MAX_VALUE)
                        .addComponent(buttonTeachersNewUser)
                        .addGap(27, 27, 27))))
        );
        panelTeachersLayout.setVerticalGroup(
            panelTeachersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTeachersLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(panelTeachersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(headerTeachersTitle)
                    .addComponent(buttonTeachersNewUser))
                .addGap(18, 18, 18)
                .addGroup(panelTeachersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonTeachersSearch)
                    .addComponent(fieldTeachersSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scrollTeachersUserList, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        tabPaneUsersList.addTab("Teachers", panelTeachers);

        panelRegistrars.setBackground(new java.awt.Color(255, 255, 255));

        headerRegistrarsTitle.setFont(new java.awt.Font("DialogInput", 0, 18)); // NOI18N
        headerRegistrarsTitle.setText("REGISTRARS LIST");

        fieldRegistrarsSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldRegistrarsSearchActionPerformed(evt);
            }
        });

        buttonRegistrarsSearch.setFont(new java.awt.Font("DialogInput", 0, 12)); // NOI18N
        buttonRegistrarsSearch.setText("Search");
        buttonRegistrarsSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRegistrarsSearchActionPerformed(evt);
            }
        });

        tableRegistrarList.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        tableRegistrarList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID #", "Last Name", "First Name", "Middle Name", "Birthdate", "Gender", "Job Title"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableRegistrarList.getTableHeader().setReorderingAllowed(false);
        scrollRegistrarsUserList.setViewportView(tableRegistrarList);
        if (tableRegistrarList.getColumnModel().getColumnCount() > 0) {
            tableRegistrarList.getColumnModel().getColumn(0).setResizable(false);
            tableRegistrarList.getColumnModel().getColumn(0).setPreferredWidth(50);
            tableRegistrarList.getColumnModel().getColumn(1).setResizable(false);
            tableRegistrarList.getColumnModel().getColumn(2).setResizable(false);
            tableRegistrarList.getColumnModel().getColumn(3).setResizable(false);
            tableRegistrarList.getColumnModel().getColumn(4).setResizable(false);
            tableRegistrarList.getColumnModel().getColumn(5).setResizable(false);
            tableRegistrarList.getColumnModel().getColumn(5).setPreferredWidth(50);
            tableRegistrarList.getColumnModel().getColumn(6).setResizable(false);
        }

        buttonRegistrarsNewUser.setFont(new java.awt.Font("DialogInput", 0, 12)); // NOI18N
        buttonRegistrarsNewUser.setText("New User");
        buttonRegistrarsNewUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRegistrarsNewUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelRegistrarsLayout = new javax.swing.GroupLayout(panelRegistrars);
        panelRegistrars.setLayout(panelRegistrarsLayout);
        panelRegistrarsLayout.setHorizontalGroup(
            panelRegistrarsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRegistrarsLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(panelRegistrarsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelRegistrarsLayout.createSequentialGroup()
                        .addGroup(panelRegistrarsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(scrollRegistrarsUserList)
                            .addGroup(panelRegistrarsLayout.createSequentialGroup()
                                .addComponent(fieldRegistrarsSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(buttonRegistrarsSearch)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelRegistrarsLayout.createSequentialGroup()
                        .addComponent(headerRegistrarsTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 204, Short.MAX_VALUE)
                        .addComponent(buttonRegistrarsNewUser)
                        .addGap(27, 27, 27))))
        );
        panelRegistrarsLayout.setVerticalGroup(
            panelRegistrarsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRegistrarsLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(panelRegistrarsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(headerRegistrarsTitle)
                    .addComponent(buttonRegistrarsNewUser))
                .addGap(18, 18, 18)
                .addGroup(panelRegistrarsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonRegistrarsSearch)
                    .addComponent(fieldRegistrarsSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scrollRegistrarsUserList, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        tabPaneUsersList.addTab("Registrars", panelRegistrars);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabPaneUsersList))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(tabPaneUsersList)
        );

        tabPaneUsersList.getAccessibleContext().setAccessibleName("Users");

        getAccessibleContext().setAccessibleName("adminWindowUserList");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void panelUsersListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelUsersListMouseClicked
        this.setVisible(false);
        AdminWindowUserList awul = new AdminWindowUserList();
        awul.show();
        awul.setLocationRelativeTo(null);
        dispose();
    }//GEN-LAST:event_panelUsersListMouseClicked

    private void panelRegisterUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelRegisterUserMouseClicked
        this.setVisible(false);
        AdminWindowRegisterUser awru = new AdminWindowRegisterUser();
        awru.show();
        awru.setLocationRelativeTo(null);
        dispose();
    }//GEN-LAST:event_panelRegisterUserMouseClicked

    private void buttonLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLogoutActionPerformed
        this.setVisible(false);
        Login l = new Login();
        l.show();
        l.setLocationRelativeTo(null);
        dispose();
    }//GEN-LAST:event_buttonLogoutActionPerformed

    private void fieldAdminsSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldAdminsSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldAdminsSearchActionPerformed

    private void buttonAdminsSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAdminsSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonAdminsSearchActionPerformed

    private void fieldStudentsSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldStudentsSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldStudentsSearchActionPerformed

    private void buttonStudentsSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonStudentsSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonStudentsSearchActionPerformed

    private void fieldTeachersSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldTeachersSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldTeachersSearchActionPerformed

    private void buttonTeachersSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTeachersSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonTeachersSearchActionPerformed

    private void fieldRegistrarsSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldRegistrarsSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldRegistrarsSearchActionPerformed

    private void buttonRegistrarsSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRegistrarsSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonRegistrarsSearchActionPerformed

    private void tabPaneUsersListPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tabPaneUsersListPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_tabPaneUsersListPropertyChange

    private void tabPaneUsersListFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tabPaneUsersListFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_tabPaneUsersListFocusGained

    private void panelProfileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelProfileMouseClicked
        this.setVisible(false);
        AdminWindowProfile awp = new AdminWindowProfile();
        awp.show();
        awp.setLocationRelativeTo(null);
        dispose();
    }//GEN-LAST:event_panelProfileMouseClicked

    private void panelSubjectsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelSubjectsMouseClicked
        this.setVisible(false);
        AdminWindowSubjects aws = new AdminWindowSubjects();
        aws.show();
        aws.setLocationRelativeTo(null);
        dispose();
    }//GEN-LAST:event_panelSubjectsMouseClicked

    private void buttonAdminsNewUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAdminsNewUserActionPerformed
        this.setVisible(false);
        AdminWindowRegisterUser awru = new AdminWindowRegisterUser();
        awru.show();
        awru.setLocationRelativeTo(null);
        dispose();
    }//GEN-LAST:event_buttonAdminsNewUserActionPerformed

    private void buttonStudentsNewUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonStudentsNewUserActionPerformed
        this.setVisible(false);
        AdminWindowRegisterUser awru = new AdminWindowRegisterUser();
        awru.show();
        awru.setLocationRelativeTo(null);
        dispose();
    }//GEN-LAST:event_buttonStudentsNewUserActionPerformed

    private void buttonTeachersNewUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTeachersNewUserActionPerformed
        this.setVisible(false);
        AdminWindowRegisterUser awru = new AdminWindowRegisterUser();
        awru.show();
        awru.setLocationRelativeTo(null);
        dispose();
    }//GEN-LAST:event_buttonTeachersNewUserActionPerformed

    private void buttonRegistrarsNewUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRegistrarsNewUserActionPerformed
        this.setVisible(false);
        AdminWindowRegisterUser awru = new AdminWindowRegisterUser();
        awru.show();
        awru.setLocationRelativeTo(null);
        dispose();
    }//GEN-LAST:event_buttonRegistrarsNewUserActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminWindowUserList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminWindowUserList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminWindowUserList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminWindowUserList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminWindowUserList().setVisible(true);
            }
        });
    }
    
    void SetTableView() {
        DefaultTableModel adminList = (DefaultTableModel) tableAdminList.getModel();
        adminList.setRowCount(0);
        
        for (int i = 0; i < admins.size(); i++){
            String idNum = admins.get(i).getIdNum();
            String lastName = admins.get(i).getFullName().getLastName();
            String firstName = admins.get(i).getFullName().getFirstName();
            String middleName = admins.get(i).getFullName().getMiddleName();
            Date birthdate = admins.get(i).getBirthdate();
            Gender gender = admins.get(i).getGender();
            String jobTitle = admins.get(i).getJobTitle();
            
            Object[] row = {idNum, lastName, firstName, middleName, birthdate, gender, jobTitle};
            adminList.addRow(row);
        }
        
        DefaultTableModel studentList = (DefaultTableModel) tableStudentList.getModel();
        studentList.setRowCount(0);
        
        for (int i = 0; i < students.size(); i++){
            String idNum = students.get(i).getIdNum();
            String lastName = students.get(i).getFullName().getLastName();
            String firstName = students.get(i).getFullName().getFirstName();
            String middleName = students.get(i).getFullName().getMiddleName();
            Date birthdate = students.get(i).getBirthdate();
            Gender gender = students.get(i).getGender();
            int yearLevel = students.get(i).getYearLevel();
            Section section = students.get(i).getSection();
            
            Object[] row = {idNum, lastName, firstName, middleName, birthdate, gender, yearLevel, section};
            studentList.addRow(row);
        }
        
        DefaultTableModel teacherList = (DefaultTableModel) tableTeacherList.getModel();
        teacherList.setRowCount(0);
        
        for (int i = 0; i < teachers.size(); i++){
            String idNum = teachers.get(i).getIdNum();
            String lastName = teachers.get(i).getFullName().getLastName();
            String firstName = teachers.get(i).getFullName().getFirstName();
            String middleName = teachers.get(i).getFullName().getMiddleName();
            Date birthdate = teachers.get(i).getBirthdate();
            Gender gender = teachers.get(i).getGender();
            String jobTitle = teachers.get(i).getJobTitle();
            String subjectExpertise = teachers.get(i).getSubjectExpertise();
            
            Object[] row = {idNum, lastName, firstName, middleName, birthdate, gender, jobTitle, subjectExpertise};
            teacherList.addRow(row);
        }
        
        DefaultTableModel registrarList = (DefaultTableModel) tableRegistrarList.getModel();
        registrarList.setRowCount(0);
        
        for (int i = 0; i < registrars.size(); i++){
            String idNum = registrars.get(i).getIdNum();
            String lastName = registrars.get(i).getFullName().getLastName();
            String firstName = registrars.get(i).getFullName().getFirstName();
            String middleName = registrars.get(i).getFullName().getMiddleName();
            Date birthdate = registrars.get(i).getBirthdate();
            Gender gender = registrars.get(i).getGender();
            String jobTitle = registrars.get(i).getJobTitle();
            
            Object[] row = {idNum, lastName, firstName, middleName, birthdate, gender, jobTitle};
            registrarList.addRow(row);
        }
    }
    
    void AddColumnListener() {
        JTableHeader adminHeader = tableAdminList.getTableHeader();
        adminHeader.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e){
                int columnIndex = adminHeader.columnAtPoint(e.getPoint());
                System.out.println("Column " + columnIndex + " is clicked.");
                
                switch(columnIndex){
                    case 0 -> {
                        admins = Accounts.sortAdminIdNum(admins, descending);
                        descending = !descending;
                    }
                    case 1 -> {
                        admins = Accounts.sortAdminLastName(admins, descending);
                        descending = !descending;
                    }
                    case 2 -> {
                        admins = Accounts.sortAdminFirstName(admins, descending);
                        descending = !descending;
                    }
                    case 3 -> {
                        admins = Accounts.sortAdminMiddleName(admins, descending);
                        descending = !descending;
                    }
                    case 5 -> {
                        admins = Accounts.sortAdminGender(admins, descending);
                        descending = !descending;
                    }
                    case 6 -> {
                        admins = Accounts.sortAdminJobTitle(admins, descending);
                        descending = !descending;
                    }
                }
                SetTableView();
            }
        });
        
        JTableHeader studentHeader = tableStudentList.getTableHeader();
        studentHeader.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e){
                int columnIndex = studentHeader.columnAtPoint(e.getPoint());
                System.out.println("Column " + columnIndex + " is clicked.");
                
                switch(columnIndex){
                    case 0 -> {
                        students = Accounts.sortStudentIdNum(students, descending);
                        descending = !descending;
                    }
                    case 1 -> {
                        students = Accounts.sortStudentLastName(students, descending);
                        descending = !descending;
                    }
                    case 2 -> {
                        students = Accounts.sortStudentFirstName(students, descending);
                        descending = !descending;
                    }
                    case 3 -> {
                        students = Accounts.sortStudentMiddleName(students, descending);
                        descending = !descending;
                    }
                    case 5 -> {
                        students = Accounts.sortStudentGender(students, descending);
                        descending = !descending;
                    }
                    case 6 -> {
                        students = Accounts.sortStudentYearLevel(students, descending);
                        descending = !descending;
                    }
                    case 7 -> {
                        students = Accounts.sortStudentSection(students, descending);
                        descending = !descending;
                    }
                }
                SetTableView();
            }
        });
        
        JTableHeader teacherHeader = tableTeacherList.getTableHeader();
        teacherHeader.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e){
                int columnIndex = teacherHeader.columnAtPoint(e.getPoint());
                System.out.println("Column " + columnIndex + " is clicked.");
                
                switch(columnIndex){
                    case 0 -> {
                        teachers = Accounts.sortTeacherIdNum(teachers, descending);
                        descending = !descending;
                    }
                    case 1 -> {
                        teachers = Accounts.sortTeacherLastName(teachers, descending);
                        descending = !descending;
                    }
                    case 2 -> {
                        teachers = Accounts.sortTeacherFirstName(teachers, descending);
                        descending = !descending;
                    }
                    case 3 -> {
                        teachers = Accounts.sortTeacherMiddleName(teachers, descending);
                        descending = !descending;
                    }
                    case 5 -> {
                        teachers = Accounts.sortTeacherGender(teachers, descending);
                        descending = !descending;
                    }
                    case 6 -> {
                        teachers = Accounts.sortTeacherJobTitle(teachers, descending);
                        descending = !descending;
                    }
                    case 7 -> {
                        teachers = Accounts.sortTeacherJobTitle(teachers, descending);
                        descending = !descending;
                    }
                }
                SetTableView();
            }
        });
        
        JTableHeader registrarHeader = tableRegistrarList.getTableHeader();
        registrarHeader.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e){
                int columnIndex = registrarHeader.columnAtPoint(e.getPoint());
                System.out.println("Column " + columnIndex + " is clicked.");
                
                switch(columnIndex){
                    case 0 -> {
                        registrars = Accounts.sortRegistrarIdNum(registrars, descending);
                        descending = !descending;
                    }
                    case 1 -> {
                        registrars = Accounts.sortRegistrarLastName(registrars, descending);
                        descending = !descending;
                    }
                    case 2 -> {
                        registrars = Accounts.sortRegistrarFirstName(registrars, descending);
                        descending = !descending;
                    }
                    case 3 -> {
                        registrars = Accounts.sortRegistrarMiddleName(registrars, descending);
                        descending = !descending;
                    }
                    case 5 -> {
                        registrars = Accounts.sortRegistrarGender(registrars, descending);
                        descending = !descending;
                    }
                    case 6 -> {
                        registrars = Accounts.sortRegistrarJobTitle(registrars, descending);
                        descending = !descending;
                    }
                }
                SetTableView();
            }
        });
    }
    
    private boolean descending = false;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAdminsNewUser;
    private javax.swing.JButton buttonAdminsSearch;
    private javax.swing.JButton buttonLogout;
    private javax.swing.JButton buttonRegistrarsNewUser;
    private javax.swing.JButton buttonRegistrarsSearch;
    private javax.swing.JButton buttonStudentsNewUser;
    private javax.swing.JButton buttonStudentsSearch;
    private javax.swing.JButton buttonTeachersNewUser;
    private javax.swing.JButton buttonTeachersSearch;
    private javax.swing.JTextField fieldAdminsSearch;
    private javax.swing.JTextField fieldRegistrarsSearch;
    private javax.swing.JTextField fieldStudentsSearch;
    private javax.swing.JTextField fieldTeachersSearch;
    private javax.swing.JLabel headerAdminsTitle;
    private javax.swing.JLabel headerProfile;
    private javax.swing.JLabel headerRegisterUser;
    private javax.swing.JLabel headerRegistrarsTitle;
    private javax.swing.JLabel headerStudentsTitle;
    private javax.swing.JLabel headerSubjects;
    private javax.swing.JLabel headerTeachersTitle;
    private javax.swing.JLabel headerUsersList;
    private javax.swing.JPanel panelAdmins;
    private javax.swing.JPanel panelMenu;
    private javax.swing.JPanel panelProfile;
    private javax.swing.JPanel panelRegisterUser;
    private javax.swing.JPanel panelRegistrars;
    private javax.swing.JPanel panelStudents;
    private javax.swing.JPanel panelSubjects;
    private javax.swing.JPanel panelTeachers;
    private javax.swing.JPanel panelUsersList;
    private javax.swing.JScrollPane scrollAdminsUserList;
    private javax.swing.JScrollPane scrollRegistrarsUserList;
    private javax.swing.JScrollPane scrollStudentsUserList;
    private javax.swing.JScrollPane scrollTeachersUserList;
    private javax.swing.JTabbedPane tabPaneUsersList;
    private javax.swing.JTable tableAdminList;
    private javax.swing.JTable tableRegistrarList;
    private javax.swing.JTable tableStudentList;
    private javax.swing.JTable tableTeacherList;
    private javax.swing.JLabel textUser;
    // End of variables declaration//GEN-END:variables
}
